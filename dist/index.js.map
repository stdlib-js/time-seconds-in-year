{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDateObject = require( '@stdlib/assert-is-date-object' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isLeapYear = require( '@stdlib/assert-is-leap-year' );\nvar currentYear = require( '@stdlib/time-current-year' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar NON_LEAP_YEAR = 31536000|0; // 365 * 86400\nvar LEAP_YEAR = 31622400|0; // 366 * 86400\n\n\n// MAIN //\n\n/**\n* Returns the number of seconds in a year.\n*\n* @param {(integer|Date)} value - year or `Date` object\n* @throws {TypeError} must provide either an integer or a `Date` object\n* @returns {integer} number of seconds in a year\n*\n* @example\n* var num = secondsInYear();\n* // returns <number>\n*\n* @example\n* var num = secondsInYear( 2016 );\n* // returns 31622400\n*\n* @example\n* var num = secondsInYear( 2017 );\n* // returns 31536000\n*/\nfunction secondsInYear( value ) {\n\tvar yr;\n\tif ( arguments.length ) {\n\t\tif ( isDateObject( value ) ) {\n\t\t\tyr = value.getFullYear();\n\t\t} else if ( isInteger( value ) ) {\n\t\t\tyr = value;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an integer or a Date object. Value: `%s`.', value ) );\n\t\t}\n\t} else {\n\t\t// Note: cannot cache as application could cross over into a new year:\n\t\tyr = currentYear();\n\t}\n\tif ( isLeapYear( yr ) ) {\n\t\treturn LEAP_YEAR;\n\t}\n\treturn NON_LEAP_YEAR;\n}\n\n\n// EXPORTS //\n\nmodule.exports = secondsInYear;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the number of seconds in a year according to the Gregorian calendar.\n*\n* @module @stdlib/time-seconds-in-year\n*\n* @example\n* var secondsInYear = require( '@stdlib/time-seconds-in-year' );\n*\n* var num = secondsInYear();\n* // returns <number>\n*\n* num = secondsInYear( 2016 );\n* // returns 31622400\n*\n* num = secondsInYear( 2017 );\n* // returns 31536000\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,+BAAgC,EACxDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAa,QAAS,6BAA8B,EACpDC,EAAc,QAAS,2BAA4B,EACnDC,EAAS,QAAS,uBAAwB,EAK1CC,EAAgB,QAChBC,EAAY,SAwBhB,SAASC,EAAeC,EAAQ,CAC/B,IAAIC,EACJ,GAAK,UAAU,OACd,GAAKT,EAAcQ,CAAM,EACxBC,EAAKD,EAAM,YAAY,UACZP,EAAWO,CAAM,EAC5BC,EAAKD,MAEL,OAAM,IAAI,UAAWJ,EAAQ,kFAAmFI,CAAM,CAAE,OAIzHC,EAAKN,EAAY,EAElB,OAAKD,EAAYO,CAAG,EACZH,EAEDD,CACR,CAKAN,EAAO,QAAUQ,ICvCjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isDateObject", "isInteger", "isLeapYear", "currentYear", "format", "NON_LEAP_YEAR", "LEAP_YEAR", "secondsInYear", "value", "yr", "main"]
}
